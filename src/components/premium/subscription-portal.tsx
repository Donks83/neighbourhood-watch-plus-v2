'use client'\n\nimport React, { useState } from 'react'\nimport { \n  Shield, \n  FileText, \n  Eye, \n  CrownIcon, \n  Check, \n  Star,\n  Users,\n  Clock,\n  Target,\n  MapPin,\n  Zap,\n  Phone,\n  CreditCard,\n  Building,\n  Badge as BadgeIcon,\n  Upload,\n  AlertCircle,\n  CheckCircle2\n} from 'lucide-react'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Input } from '@/components/ui/input'\nimport { Label } from '@/components/ui/label'\nimport { Textarea } from '@/components/ui/textarea'\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs'\nimport { Progress } from '@/components/ui/progress'\nimport type { UserRole, SubscriptionTier } from '@/types/premium/subscription'\n\ninterface SubscriptionPortalProps {\n  onSelectPlan: (tier: SubscriptionTier, organizationDetails: OrganizationDetails) => Promise<void>\n  onStartTrial: (role: UserRole, organizationDetails: OrganizationDetails) => Promise<void>\n}\n\ninterface OrganizationDetails {\n  name: string\n  type: UserRole\n  contactEmail: string\n  contactName: string\n  phone: string\n  address: string\n  badgeNumber?: string // For police\n  licenseNumber?: string // For insurance/security\n  website?: string\n  jurisdiction?: string // For police\n  verificationDocuments: File[]\n}\n\nconst SUBSCRIPTION_TIERS: Record<UserRole, SubscriptionTier[]> = {\n  police: [\n    {\n      id: 'police-basic',\n      name: 'Police Basic',\n      role: 'police',\n      features: [\n        'Up to 25 evidence requests/month',\n        'Standard response time (48 hours)',\n        'Basic analytics dashboard',\n        'Evidence chain of custody',\n        'Court-ready documentation',\n        'Email support'\n      ],\n      limits: {\n        monthlyRequests: 25,\n        concurrentRequests: 5,\n        searchRadius: 1000,\n        evidenceRetention: 2555, // 7 years\n        prioritySupport: false\n      },\n      pricing: {\n        monthlyFee: 800,\n        setupFee: 200\n      }\n    },\n    {\n      id: 'police-professional',\n      name: 'Police Professional',\n      role: 'police',\n      features: [\n        'Up to 100 evidence requests/month',\n        'Priority response time (24 hours)',\n        'Advanced analytics & reporting',\n        'Multi-officer access (10 users)',\n        'Emergency priority requests',\n        'Phone support',\n        'Custom integrations',\n        'Bulk evidence export'\n      ],\n      limits: {\n        monthlyRequests: 100,\n        concurrentRequests: 20,\n        searchRadius: 2000,\n        evidenceRetention: 2555,\n        prioritySupport: true\n      },\n      pricing: {\n        monthlyFee: 1800,\n        setupFee: 500\n      }\n    },\n    {\n      id: 'police-enterprise',\n      name: 'Police Enterprise',\n      role: 'police',\n      features: [\n        'Unlimited evidence requests',\n        'Emergency response (1 hour)',\n        'Advanced AI matching',\n        'Unlimited users',\n        'Dedicated account manager',\n        '24/7 priority support',\n        'Custom dashboard',\n        'API access',\n        'Multi-jurisdiction support'\n      ],\n      limits: {\n        monthlyRequests: 999999,\n        concurrentRequests: 100,\n        searchRadius: 5000,\n        evidenceRetention: 2555,\n        prioritySupport: true\n      },\n      pricing: {\n        monthlyFee: 4500,\n        setupFee: 2000\n      }\n    }\n  ],\n  insurance: [\n    {\n      id: 'insurance-standard',\n      name: 'Insurance Standard',\n      role: 'insurance',\n      features: [\n        'Up to 50 validation requests/month',\n        'Fraud detection tools',\n        'Claims verification',\n        'Standard processing (5 days)',\n        'Basic reporting',\n        'Email support'\n      ],\n      limits: {\n        monthlyRequests: 50,\n        concurrentRequests: 10,\n        searchRadius: 800,\n        evidenceRetention: 2190, // 6 years\n        prioritySupport: false\n      },\n      pricing: {\n        monthlyFee: 1200,\n        setupFee: 300\n      }\n    },\n    {\n      id: 'insurance-premium',\n      name: 'Insurance Premium',\n      role: 'insurance',\n      features: [\n        'Up to 200 validation requests/month',\n        'Advanced fraud analytics',\n        'Real-time claim validation',\n        'Priority processing (2 days)',\n        'Custom reporting',\n        'API integration',\n        'Bulk processing',\n        'Phone support'\n      ],\n      limits: {\n        monthlyRequests: 200,\n        concurrentRequests: 50,\n        searchRadius: 1500,\n        evidenceRetention: 2190,\n        prioritySupport: true\n      },\n      pricing: {\n        monthlyFee: 3500,\n        setupFee: 1000\n      }\n    }\n  ],\n  security: [\n    {\n      id: 'security-basic',\n      name: 'Security Basic',\n      role: 'security',\n      features: [\n        'Up to 30 area requests/month',\n        'Client area monitoring',\n        'Incident response coordination',\n        'Basic reporting',\n        'Email support'\n      ],\n      limits: {\n        monthlyRequests: 30,\n        concurrentRequests: 8,\n        searchRadius: 600,\n        evidenceRetention: 1095, // 3 years\n        prioritySupport: false\n      },\n      pricing: {\n        monthlyFee: 600,\n        setupFee: 150\n      }\n    },\n    {\n      id: 'security-professional',\n      name: 'Security Professional',\n      role: 'security',\n      features: [\n        'Up to 100 area requests/month',\n        'Multi-site monitoring',\n        'Real-time alerts',\n        'Advanced reporting',\n        'Phone support',\n        'Custom alerts'\n      ],\n      limits: {\n        monthlyRequests: 100,\n        concurrentRequests: 25,\n        searchRadius: 1200,\n        evidenceRetention: 1095,\n        prioritySupport: true\n      },\n      pricing: {\n        monthlyFee: 1500,\n        setupFee: 400\n      }\n    }\n  ],\n  community: [], // Community users don't have paid tiers\n  admin: [] // Admin users have special access\n}\n\nconst ROLE_CONFIGS = {\n  police: {\n    title: 'Police & Law Enforcement',\n    icon: Shield,\n    color: 'blue',\n    description: 'Professional evidence collection and investigation tools',\n    verification: 'Police ID or warrant card required'\n  },\n  insurance: {\n    title: 'Insurance Companies',\n    icon: FileText,\n    color: 'green',\n    description: 'Claims validation and fraud prevention tools',\n    verification: 'FCA registration or insurance license required'\n  },\n  security: {\n    title: 'Security Companies',\n    icon: Eye,\n    color: 'purple',\n    description: 'Client area monitoring and incident response',\n    verification: 'SIA license or security certification required'\n  }\n} as const\n\nexport default function SubscriptionPortal({\n  onSelectPlan,\n  onStartTrial\n}: SubscriptionPortalProps) {\n  const [selectedRole, setSelectedRole] = useState<UserRole>('police')\n  const [selectedTier, setSelectedTier] = useState<SubscriptionTier | null>(null)\n  const [organizationDetails, setOrganizationDetails] = useState<Partial<OrganizationDetails>>({\n    type: selectedRole\n  })\n  const [verificationFiles, setVerificationFiles] = useState<File[]>([])\n  const [currentStep, setCurrentStep] = useState(1)\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const roleConfig = ROLE_CONFIGS[selectedRole as keyof typeof ROLE_CONFIGS]\n  const RoleIcon = roleConfig?.icon || Shield\n  const availableTiers = SUBSCRIPTION_TIERS[selectedRole] || []\n\n  const handleRoleSelect = (role: UserRole) => {\n    setSelectedRole(role)\n    setSelectedTier(null)\n    setOrganizationDetails(prev => ({ ...prev, type: role }))\n  }\n\n  const handleFileUpload = (files: FileList) => {\n    const newFiles = Array.from(files)\n    setVerificationFiles(prev => [...prev, ...newFiles])\n  }\n\n  const removeFile = (index: number) => {\n    setVerificationFiles(prev => prev.filter((_, i) => i !== index))\n  }\n\n  const handleSubmit = async () => {\n    if (!selectedTier || !organizationDetails.name || !organizationDetails.contactEmail) {\n      alert('Please complete all required fields')\n      return\n    }\n\n    setIsSubmitting(true)\n    try {\n      const completeDetails: OrganizationDetails = {\n        ...organizationDetails,\n        verificationDocuments: verificationFiles\n      } as OrganizationDetails\n\n      await onSelectPlan(selectedTier, completeDetails)\n    } catch (error) {\n      console.error('Error submitting subscription:', error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  const handleStartTrial = async () => {\n    if (!organizationDetails.name || !organizationDetails.contactEmail) {\n      alert('Please provide basic organization details for trial')\n      return\n    }\n\n    setIsSubmitting(true)\n    try {\n      const completeDetails: OrganizationDetails = {\n        ...organizationDetails,\n        verificationDocuments: verificationFiles\n      } as OrganizationDetails\n\n      await onStartTrial(selectedRole, completeDetails)\n    } catch (error) {\n      console.error('Error starting trial:', error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        \n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n            Professional Evidence Portal\n          </h1>\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\n            Access community camera networks for professional investigations, claims validation, and security monitoring\n          </p>\n        </div>\n\n        {/* Progress Steps */}\n        <div className=\"mb-12\">\n          <div className=\"flex items-center justify-center space-x-8\">\n            {[\n              { step: 1, title: 'Select Role' },\n              { step: 2, title: 'Choose Plan' },\n              { step: 3, title: 'Organization Details' },\n              { step: 4, title: 'Verification' }\n            ].map((item) => (\n              <div key={item.step} className=\"flex items-center\">\n                <div className={`w-10 h-10 rounded-full flex items-center justify-center text-sm font-medium ${\n                  currentStep >= item.step \n                    ? 'bg-blue-600 text-white' \n                    : 'bg-gray-200 dark:bg-gray-700 text-gray-500'\n                }`}>\n                  {currentStep > item.step ? (\n                    <Check className=\"w-5 h-5\" />\n                  ) : (\n                    item.step\n                  )}\n                </div>\n                <span className=\"ml-2 text-sm font-medium text-gray-900 dark:text-white\">\n                  {item.title}\n                </span>\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4\">\n            <Progress value={(currentStep / 4) * 100} className=\"h-2\" />\n          </div>\n        </div>\n\n        <Tabs value={currentStep.toString()} className=\"space-y-8\">\n          \n          {/* Step 1: Role Selection */}\n          <TabsContent value=\"1\" className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                Select Your Organization Type\n              </h2>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Choose the option that best describes your organization\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {Object.entries(ROLE_CONFIGS).map(([role, config]) => {\n                const Icon = config.icon\n                const isSelected = selectedRole === role\n                \n                return (\n                  <Card \n                    key={role}\n                    className={`cursor-pointer transition-all hover:shadow-lg ${\n                      isSelected \n                        ? `ring-2 ring-${config.color}-500 border-${config.color}-200` \n                        : 'hover:border-gray-300'\n                    }`}\n                    onClick={() => {\n                      handleRoleSelect(role as UserRole)\n                      setCurrentStep(2)\n                    }}\n                  >\n                    <CardContent className=\"p-8 text-center\">\n                      <div className={`w-16 h-16 bg-${config.color}-100 dark:bg-${config.color}-900 rounded-full flex items-center justify-center mx-auto mb-4`}>\n                        <Icon className={`w-8 h-8 text-${config.color}-600 dark:text-${config.color}-400`} />\n                      </div>\n                      \n                      <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\n                        {config.title}\n                      </h3>\n                      \n                      <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\n                        {config.description}\n                      </p>\n                      \n                      <div className=\"text-xs text-gray-500 bg-gray-50 dark:bg-gray-800 rounded p-2\">\n                        <AlertCircle className=\"w-4 h-4 inline mr-1\" />\n                        {config.verification}\n                      </div>\n                      \n                      {isSelected && (\n                        <Badge className={`mt-4 bg-${config.color}-600`}>\n                          <Check className=\"w-3 h-3 mr-1\" />\n                          Selected\n                        </Badge>\n                      )}\n                    </CardContent>\n                  </Card>\n                )\n              })}\n            </div>\n          </TabsContent>\n\n          {/* Step 2: Plan Selection */}\n          <TabsContent value=\"2\" className=\"space-y-8\">\n            <div className=\"text-center mb-8\">\n              <div className=\"flex items-center justify-center gap-3 mb-4\">\n                <RoleIcon className={`w-8 h-8 text-${roleConfig?.color}-600`} />\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                  {roleConfig?.title} Plans\n                </h2>\n              </div>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                Choose the plan that fits your organization's needs\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {availableTiers.map((tier, index) => {\n                const isPopular = index === 1 // Middle tier is usually most popular\n                const isSelected = selectedTier?.id === tier.id\n                \n                return (\n                  <Card \n                    key={tier.id}\n                    className={`relative cursor-pointer transition-all hover:shadow-lg ${\n                      isSelected \n                        ? `ring-2 ring-${roleConfig?.color}-500 border-${roleConfig?.color}-200` \n                        : 'hover:border-gray-300'\n                    }`}\n                    onClick={() => {\n                      setSelectedTier(tier)\n                      setCurrentStep(3)\n                    }}\n                  >\n                    {isPopular && (\n                      <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2\">\n                        <Badge className=\"bg-gradient-to-r from-orange-400 to-red-500 text-white px-4 py-1\">\n                          <Star className=\"w-3 h-3 mr-1\" />\n                          Most Popular\n                        </Badge>\n                      </div>\n                    )}\n                    \n                    <CardHeader className=\"text-center pb-4\">\n                      <CardTitle className=\"text-xl font-bold text-gray-900 dark:text-white\">\n                        {tier.name}\n                      </CardTitle>\n                      <div className=\"mt-4\">\n                        <span className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                          £{tier.pricing.monthlyFee.toLocaleString()}\n                        </span>\n                        <span className=\"text-gray-500 dark:text-gray-400\">/month</span>\n                      </div>\n                      {tier.pricing.setupFee && (\n                        <div className=\"text-sm text-gray-500\">\n                          + £{tier.pricing.setupFee} setup fee\n                        </div>\n                      )}\n                    </CardHeader>\n                    \n                    <CardContent className=\"pt-0\">\n                      <ul className=\"space-y-3 mb-6\">\n                        {tier.features.map((feature, idx) => (\n                          <li key={idx} className=\"flex items-start gap-2 text-sm\">\n                            <Check className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\n                            <span className=\"text-gray-600 dark:text-gray-400\">{feature}</span>\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 mb-4\">\n                        <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Plan Limits</h4>\n                        <div className=\"grid grid-cols-2 gap-2 text-xs text-gray-600 dark:text-gray-400\">\n                          <div>Monthly Requests: {tier.limits.monthlyRequests}</div>\n                          <div>Max Radius: {tier.limits.searchRadius}m</div>\n                          <div>Concurrent: {tier.limits.concurrentRequests}</div>\n                          <div>Support: {tier.limits.prioritySupport ? 'Priority' : 'Standard'}</div>\n                        </div>\n                      </div>\n                      \n                      {isSelected && (\n                        <Badge className={`w-full justify-center bg-${roleConfig?.color}-600`}>\n                          <Check className=\"w-3 h-3 mr-1\" />\n                          Selected Plan\n                        </Badge>\n                      )}\n                    </CardContent>\n                  </Card>\n                )\n              })}\n            </div>\n\n            <div className=\"text-center\">\n              <Button\n                variant=\"outline\"\n                onClick={() => {\n                  setCurrentStep(3)\n                  setSelectedTier(null)\n                }}\n                className=\"mr-4\"\n              >\n                Start Free Trial Instead\n              </Button>\n            </div>\n          </TabsContent>\n\n          {/* Step 3: Organization Details */}\n          <TabsContent value=\"3\" className=\"space-y-8\">\n            <div className=\"max-w-2xl mx-auto\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                  Organization Details\n                </h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  Provide your organization information for verification\n                </p>\n              </div>\n\n              <Card>\n                <CardContent className=\"p-8 space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <Label htmlFor=\"orgName\" className=\"text-sm font-medium mb-2 block\">\n                        Organization Name <span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        id=\"orgName\"\n                        value={organizationDetails.name || ''}\n                        onChange={(e) => setOrganizationDetails(prev => ({ ...prev, name: e.target.value }))}\n                        placeholder=\"e.g., Durham Police, Aviva Insurance\"\n                        required\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"contactName\" className=\"text-sm font-medium mb-2 block\">\n                        Contact Name <span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        id=\"contactName\"\n                        value={organizationDetails.contactName || ''}\n                        onChange={(e) => setOrganizationDetails(prev => ({ ...prev, contactName: e.target.value }))}\n                        placeholder=\"Primary contact person\"\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <Label htmlFor=\"email\" className=\"text-sm font-medium mb-2 block\">\n                        Contact Email <span className=\"text-red-500\">*</span>\n                      </Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        value={organizationDetails.contactEmail || ''}\n                        onChange={(e) => setOrganizationDetails(prev => ({ ...prev, contactEmail: e.target.value }))}\n                        placeholder=\"official@organization.gov.uk\"\n                        required\n                      />\n                    </div>\n                    \n                    <div>\n                      <Label htmlFor=\"phone\" className=\"text-sm font-medium mb-2 block\">\n                        Phone Number\n                      </Label>\n                      <Input\n                        id=\"phone\"\n                        type=\"tel\"\n                        value={organizationDetails.phone || ''}\n                        onChange={(e) => setOrganizationDetails(prev => ({ ...prev, phone: e.target.value }))}\n                        placeholder=\"+44 xxx xxx xxxx\"\n                      />\n                    </div>\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"address\" className=\"text-sm font-medium mb-2 block\">\n                      Official Address\n                    </Label>\n                    <Textarea\n                      id=\"address\"\n                      value={organizationDetails.address || ''}\n                      onChange={(e) => setOrganizationDetails(prev => ({ ...prev, address: e.target.value }))}\n                      placeholder=\"Official headquarters or main office address\"\n                      rows={3}\n                    />\n                  </div>\n\n                  {/* Role-specific fields */}\n                  {selectedRole === 'police' && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <Label htmlFor=\"badgeNumber\" className=\"text-sm font-medium mb-2 block\">\n                          Badge/Warrant Number\n                        </Label>\n                        <Input\n                          id=\"badgeNumber\"\n                          value={organizationDetails.badgeNumber || ''}\n                          onChange={(e) => setOrganizationDetails(prev => ({ ...prev, badgeNumber: e.target.value }))}\n                          placeholder=\"Police identification number\"\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"jurisdiction\" className=\"text-sm font-medium mb-2 block\">\n                          Jurisdiction\n                        </Label>\n                        <Input\n                          id=\"jurisdiction\"\n                          value={organizationDetails.jurisdiction || ''}\n                          onChange={(e) => setOrganizationDetails(prev => ({ ...prev, jurisdiction: e.target.value }))}\n                          placeholder=\"e.g., Durham, Thames Valley\"\n                        />\n                      </div>\n                    </div>\n                  )}\n\n                  {(selectedRole === 'insurance' || selectedRole === 'security') && (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <Label htmlFor=\"licenseNumber\" className=\"text-sm font-medium mb-2 block\">\n                          License Number\n                        </Label>\n                        <Input\n                          id=\"licenseNumber\"\n                          value={organizationDetails.licenseNumber || ''}\n                          onChange={(e) => setOrganizationDetails(prev => ({ ...prev, licenseNumber: e.target.value }))}\n                          placeholder={selectedRole === 'insurance' ? 'FCA registration number' : 'SIA license number'}\n                        />\n                      </div>\n                      <div>\n                        <Label htmlFor=\"website\" className=\"text-sm font-medium mb-2 block\">\n                          Company Website\n                        </Label>\n                        <Input\n                          id=\"website\"\n                          value={organizationDetails.website || ''}\n                          onChange={(e) => setOrganizationDetails(prev => ({ ...prev, website: e.target.value }))}\n                          placeholder=\"https://www.company.com\"\n                        />\n                      </div>\n                    </div>\n                  )}\n                  \n                  <div className=\"flex gap-4\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => setCurrentStep(2)}\n                      className=\"flex-1\"\n                    >\n                      Back to Plans\n                    </Button>\n                    <Button\n                      onClick={() => setCurrentStep(4)}\n                      disabled={!organizationDetails.name || !organizationDetails.contactEmail}\n                      className=\"flex-1\"\n                    >\n                      Continue to Verification\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Step 4: Verification */}\n          <TabsContent value=\"4\" className=\"space-y-8\">\n            <div className=\"max-w-2xl mx-auto\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n                  Organization Verification\n                </h2>\n                <p className=\"text-gray-600 dark:text-gray-400\">\n                  Upload verification documents to complete your registration\n                </p>\n              </div>\n\n              <Card>\n                <CardContent className=\"p-8 space-y-6\">\n                  <div className=\"bg-blue-50 dark:bg-blue-950 border border-blue-200 dark:border-blue-800 rounded-lg p-4\">\n                    <h4 className=\"font-medium text-blue-900 dark:text-blue-100 mb-2\">\n                      Required Documents for {roleConfig?.title}\n                    </h4>\n                    <ul className=\"text-sm text-blue-800 dark:text-blue-200 space-y-1\">\n                      {selectedRole === 'police' && (\n                        <>\n                          <li>• Police identification or warrant card</li>\n                          <li>• Official letterhead authorization</li>\n                          <li>• Department contact verification</li>\n                        </>\n                      )}\n                      {selectedRole === 'insurance' && (\n                        <>\n                          <li>• FCA registration certificate</li>\n                          <li>• Insurance license documentation</li>\n                          <li>• Company registration documents</li>\n                        </>\n                      )}\n                      {selectedRole === 'security' && (\n                        <>\n                          <li>• SIA license certificate</li>\n                          <li>• Security industry certification</li>\n                          <li>• Business registration documents</li>\n                        </>\n                      )}\n                    </ul>\n                  </div>\n\n                  <div>\n                    <Label className=\"text-sm font-medium mb-4 block\">\n                      Upload Verification Documents\n                    </Label>\n                    \n                    <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-8 text-center hover:border-gray-400 dark:hover:border-gray-500 transition-colors\">\n                      <input\n                        type=\"file\"\n                        multiple\n                        accept=\".pdf,.jpg,.jpeg,.png,.doc,.docx\"\n                        onChange={(e) => e.target.files && handleFileUpload(e.target.files)}\n                        className=\"hidden\"\n                        id=\"fileUpload\"\n                      />\n                      <label htmlFor=\"fileUpload\" className=\"cursor-pointer\">\n                        <Upload className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                        <p className=\"text-gray-600 dark:text-gray-400 mb-2\">\n                          Click to upload or drag and drop\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                          PDF, DOC, JPG, PNG files (max 10MB each)\n                        </p>\n                      </label>\n                    </div>\n                  </div>\n\n                  {verificationFiles.length > 0 && (\n                    <div>\n                      <h4 className=\"font-medium text-gray-900 dark:text-white mb-3\">\n                        Uploaded Documents ({verificationFiles.length})\n                      </h4>\n                      <div className=\"space-y-2\">\n                        {verificationFiles.map((file, index) => (\n                          <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                            <div className=\"flex items-center gap-3\">\n                              <FileText className=\"w-5 h-5 text-blue-600\" />\n                              <div>\n                                <p className=\"font-medium text-gray-900 dark:text-white\">{file.name}</p>\n                                <p className=\"text-sm text-gray-500\">\n                                  {(file.size / 1024 / 1024).toFixed(2)} MB\n                                </p>\n                              </div>\n                            </div>\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => removeFile(index)}\n                              className=\"text-red-500 hover:text-red-700\"\n                            >\n                              Remove\n                            </Button>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4\">\n                    <div className=\"flex items-start gap-2\">\n                      <AlertCircle className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400 mt-0.5\" />\n                      <div className=\"text-sm text-yellow-800 dark:text-yellow-200\">\n                        <p className=\"font-medium mb-1\">Verification Process</p>\n                        <p>Our verification team will review your documents within 2-3 business days. You'll receive an email confirmation once approved.</p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    {selectedTier ? (\n                      <div className=\"flex gap-4\">\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => setCurrentStep(3)}\n                          className=\"flex-1\"\n                          disabled={isSubmitting}\n                        >\n                          Back to Details\n                        </Button>\n                        <Button\n                          onClick={handleSubmit}\n                          disabled={isSubmitting || verificationFiles.length === 0}\n                          className=\"flex-1 bg-green-600 hover:bg-green-700 text-white\"\n                        >\n                          {isSubmitting ? (\n                            <>\n                              <Clock className=\"w-4 h-4 mr-2 animate-spin\" />\n                              Processing...\n                            </>\n                          ) : (\n                            <>\n                              <CreditCard className=\"w-4 h-4 mr-2\" />\n                              Complete Subscription (£{selectedTier.pricing.monthlyFee}/month)\n                            </>\n                          )}\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className=\"flex gap-4\">\n                        <Button\n                          variant=\"outline\"\n                          onClick={() => setCurrentStep(3)}\n                          className=\"flex-1\"\n                          disabled={isSubmitting}\n                        >\n                          Back to Details\n                        </Button>\n                        <Button\n                          onClick={handleStartTrial}\n                          disabled={isSubmitting}\n                          className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white\"\n                        >\n                          {isSubmitting ? (\n                            <>\n                              <Clock className=\"w-4 h-4 mr-2 animate-spin\" />\n                              Setting up trial...\n                            </>\n                          ) : (\n                            <>\n                              <Zap className=\"w-4 h-4 mr-2\" />\n                              Start 14-Day Free Trial\n                            </>\n                          )}\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  )\n}\n